// "Personal Tracing Minion V3"
//Eswar P. R Iyer & Srividya
// This macro batch quantifies all the images in a folder and any
// subfolders in that folder. The images must be in JPEG format. 
//Enjoy!
//
// 

   requires("1.33s"); 
   dir = getDirectory("Choose a Directory ");
   setBatchMode(true);
   count = 0;
   countFiles(dir);
   n = 0;
   processFiles(dir);
   //print(count+" files processed");
   
   function countFiles(dir) {
      list = getFileList(dir);
      for (i=0; i<list.length; i++) {
          if (endsWith(list[i], "/"))
              countFiles(""+dir+list[i]);
          else
              count++;
      }
  }

   function processFiles(dir) {
      list = getFileList(dir);
      for (i=0; i<list.length; i++) {
          if (endsWith(list[i], "/"))
              processFiles(""+dir+list[i]);
          else {
             showProgress(n++, count);
             path = dir+list[i];
             processFile(path);
			
          }
		  
      }
	    saveFile(path);
		
  }

  function processFile(path) {
      
           
		   list = getFileList(dir);
    //setOption("display labels", true);
    setBatchMode(false);
  
	
        path = dir+list[i];
        showProgress(i, list.length);
        IJ.redirectErrorMessages();
        open(path);
		 Inputpath = File.getParent(path); //get the name of the folder
        
       setAutoThreshold("Default dark");
       run("Threshold...");
       setThreshold(190, 255);
       run("Convert to Mask");
       rename("original");
            //run("Mean...", "radius=2");  //Blurs the iamge to remove imperfections ..Does not work well in some cases
			run("Maximum...", "radius=.01"); // This filter works better for the Skeletonize program
			run("Skeletonize (2D/3D)");

			//SelectWindow("original");
			//close();
			//run("Analyze Skeleton (2D/3D)", "prune=none");
             run("Analyze Skeleton (2D/3D)", "prune=none calculate");
            // selectWindow("Longest shortest paths");
			 close();
			 close();
             close();
			 
 String.copyResults();
  selectWindow("Results");
  String.paste;           // Returns the contents of the clipboard.
  String.resetBuffer;  // clear the paste buffer
  run("Clear Results");
     
	
	
	 
        
    }
function saveFile(path) {
Inputpath = File.getParent(path); //get the name of the folder
selectWindow("Log"); //Selects the Log Window
        saveAs("text", Inputpath +"results"+".txt"); //Savel the Log test in the parent directory by renaming it as filename +results 
		print("\\Clear") ;  //This command clears the Log window 
         
           		
	

      }
  
